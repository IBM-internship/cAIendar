
@{
    ViewData["Title"] = "AI Календар";
}

<!-- TOAST UI Calendar CSS -->
<link rel="stylesheet" href="https://uicdn.toast.com/calendar/latest/toastui-calendar.min.css" />

<!-- Bootstrap CSS (if not already in _Layout.cshtml) -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />

<div class="container mt-5">
    <div class="d-flex justify-content-end mb-3">
        <button class="btn btn-primary" id="addEventBtn">+ Ново събитие</button>
    </div>

    <div id="calendar" style="height: 800px;"></div>

    <!-- Modal -->
    <div class="modal fade" id="eventModal" tabindex="-1" aria-labelledby="eventModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <form id="eventForm" class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="eventModalLabel">Ново събитие</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Затвори"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="eventId" />
                    <div class="mb-3">
                        <label for="eventTitle" class="form-label">Заглавие</label>
                        <input type="text" class="form-control" id="eventTitle" required>
                    </div>
                    <div class="mb-3">
                        <label for="eventStart" class="form-label">Начало</label>
                        <input type="datetime-local" class="form-control" id="eventStart" required>
                    </div>
                    <div class="mb-3">
                        <label for="eventEnd" class="form-label">Край</label>
                        <input type="datetime-local" class="form-control" id="eventEnd" required>
                    </div>
                    <div class="mb-3">
                        <label for="eventDescription" class="form-label">Описание</label>
                        <textarea class="form-control" id="eventDescription" rows="2"></textarea>
                    </div>
                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="eventAllDay">
                        <label class="form-check-label" for="eventAllDay">Целодневно събитие</label>
                    </div>
                    <div class="mb-3">
                        <label for="eventLocation" class="form-label">Местоположение</label>
                        <input type="text" class="form-control" id="eventLocation">
                    </div>
                    <div class="mb-3">
                        <label for="eventMeetingLink" class="form-label">Линк за среща</label>
                        <input type="text" class="form-control" id="eventMeetingLink">
                    </div>
                    <div class="mb-3 form-check">
                        <input type="checkbox" class="form-check-input" id="eventIsInPerson">
                        <label class="form-check-label" for="eventIsInPerson">Присъствено събитие</label>
                    </div>
                    <div class="mb-3">
                        <label for="eventColor" class="form-label">Цвят на събитието</label>
                        <input type="color" class="form-control form-control-color" id="eventColor" value="#007bff">
                    </div>


                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отказ</button>
                    <button type="submit" class="btn btn-primary">Запази</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Toast UI Calendar JS -->
<script src="https://uicdn.toast.com/calendar/latest/toastui-calendar.min.js"></script>

<!-- Bootstrap JS Bundle (includes Popper) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const calendar = new tui.Calendar('#calendar', {
            defaultView: 'month',
            useFormPopup: false,
            useDetailPopup: false,
            template: {
                monthDayname: function(dayname) {
                    return `<span class="calendar-day">${dayname.label}</span>`;
                }
            }
        });

        // Load events from API
        fetch('/api/calendarapi/all')
            .then(res => res.json())
            .then(events => {
                events.forEach(event => {
                    calendar.createEvents([{
                        id: String(event.id),
                        calendarId: '1',
                        title: event.title,
                        category: 'time',
                        start: event.start,
                        end: event.end
                    }]);
                });
            });

        const eventModal = new bootstrap.Modal(document.getElementById('eventModal'));

        document.getElementById('addEventBtn').addEventListener('click', () => {
            document.getElementById('eventForm').reset();
            document.getElementById('eventId').value = '';
            eventModal.show();
        });

        function localDatetimeToISOString(localDateTime) {
            const dt = new Date(localDateTime);
            return dt.toISOString();
        }

            document.getElementById('eventForm').addEventListener('submit', async function (e) {
        e.preventDefault();

        // Declare eventIdValue here:
        const eventIdValue = document.getElementById('eventId').value;

        const event = {
            Id: eventIdValue ? parseInt(eventIdValue, 10) : 0,
            Title: document.getElementById('eventTitle').value,
            Description: document.getElementById('eventDescription').value,
            Start: localDatetimeToISOString(document.getElementById('eventStart').value),
            End: localDatetimeToISOString(document.getElementById('eventEnd').value),
            IsAllDay: document.getElementById('eventAllDay').checked,
            Location: document.getElementById('eventLocation').value,
            MeetingLink: document.getElementById('eventMeetingLink').value,
            IsInPerson: document.getElementById('eventIsInPerson').checked,
            Color: document.getElementById('eventColor').value
        };

        const response = await fetch('/api/calendarapi/add', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(event)
        });

        if (response.ok) {
            const newEventId = await response.json();

            calendar.createEvents([{
                id: String(newEventId),         // id as string
                calendarId: '1',
                title: event.Title,
                category: 'time',
                start: event.Start,
                end: event.End,
                isAllDay: event.IsAllDay,
                location: event.Location,
                color: event.Color
            }]);

            eventModal.hide();
        } else {
            const errorText = await response.text();
            alert(`Error adding event: ${errorText}`);
        }
    });
    });
</script>

<style>
    #calendar {
        max-width: 100%;
        border: 1px solid #dee2e6;
        background-color: #fff;
        border-radius: 0.5rem;
        overflow: hidden;
    }

    .tui-full-calendar-weekday-grid-line {
        background-color: #f8f9fa;
    }

    .tui-full-calendar-timegrid-time {
        color: #6c757d;
    }

    .calendar-day {
        font-weight: 600;
        color: #0d6efd;
    }

    .tui-full-calendar-popup {
        z-index: 1055; /* Boost over modal backdrop */
    }
</style>
